<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lqs.mall.dao.UmsAdminRoleRelationDao">
    <insert id="insertList">
        insert into ums_admin_role_relation(admin_id, role_id) values
        <foreach collection="list" separator="," item="item" index="index">
            (#{item.adminId,jdbcType=BIGINT},
             #{item.roleId,jdbcType=BIGINT})
        </foreach>
    </insert>
    <select id="getResourceList" resultType="com.lqs.mall.model.UmsResource">
        select
            ur.id id,
            ur.create_time createTime,
            ur.`name` `name`,
            ur.url,
            ur.description description,
            ur.category_id categoryId
        from ums_admin_role_relation ar
        LEFT JOIN ums_role r on ar.role_id = r.id
        LEFT JOIN ums_role_resource_relation rrr on rrr.role_id = r.id
        LEFT JOIN ums_resource ur on ur.id = rrr.resource_id
        WHERE ar.admin_id = #{adminId}
        AND ur.id is not null
        GROUP BY ur.id
    </select>
    <select id="getRoleList" resultType="com.lqs.mall.model.UmsRole">
        select
            r.*
        from ums_admin_role_relation arr
            left join ums_role r on r.id = arr.role_id
        where arr.admin_id = #{adminId}
    </select>
    <select id="getAdminIdList" resultType="java.lang.Long">
        select
            DISTINCT ar.admin_id
        from ums_role_resource_relation rrr
            left join ums_admin_role_relation ar on ar.role_id = rrr.role_id
        where rrr.resource_id = #{resourceId}
    </select>
</mapper>